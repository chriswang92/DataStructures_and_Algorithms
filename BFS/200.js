/**
 * 200. Number of Islands - medium
 * Solution using BFS and DFS: https://javascript.plainenglish.io/javascript-algorithms-number-of-islands-leetcode-6eff200bdf1
 * @param {character[][]} grid
 * @return {number}
 */
const numIslands = grid => {
    const isLand = (i, j) => grid[i][j] === '1';
    const isInside = (i, j) =>
        i >= 0 && i < grid.length && j >= 0 && j < grid[i].length;
    const isIsland = (i, j) => isInside(i, j) && isLand(i, j);

    const dfs = (i, j) => {
        if (isIsland(i, j)) {
            grid[i][j] = '0';
            dfs(i + 1, j);
            dfs(i - 1, j);
            dfs(i, j + 1);
            dfs(i, j - 1);
        }
    };

    let count = 0;

    for (let i = 0; i < grid.length; i++) {
        for (let j = 0; j < grid[i].length; j++) {
            if (isIsland(i, j)) {
                count++;
                dfs(i, j);
            }
        }
    }

    return count;
};

const grid = [
    ['1', '1', '1', '1', '0'],
    ['1', '1', '0', '1', '0'],
    ['1', '1', '0', '0', '0'],
    ['0', '0', '0', '0', '0'],
];
const grid2 = [
    ['1', '1', '0', '0', '0'],
    ['1', '1', '0', '0', '0'],
    ['0', '0', '1', '0', '0'],
    ['0', '0', '0', '1', '1'],
];
const grid3 = [
    [
        '1',
        '1',
        '1',
        '1',
        '1',
        '0',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '0',
        '1',
        '0',
        '1',
        '1',
    ],
    [
        '0',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '0',
        '1',
        '1',
        '1',
        '1',
        '1',
        '0',
    ],
    [
        '1',
        '0',
        '1',
        '1',
        '1',
        '0',
        '0',
        '1',
        '1',
        '0',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
    ],
    [
        '1',
        '1',
        '1',
        '1',
        '0',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
    ],
    [
        '1',
        '0',
        '0',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
    ],
    [
        '1',
        '0',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '0',
        '1',
        '1',
        '1',
        '0',
        '1',
        '1',
        '1',
        '0',
        '1',
        '1',
        '1',
    ],
    [
        '0',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '0',
        '1',
        '1',
        '0',
        '1',
        '1',
        '1',
        '1',
    ],
    [
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '0',
        '1',
        '1',
        '1',
        '1',
        '0',
        '1',
        '1',
    ],
    [
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '0',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
    ],
    [
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
    ],
    [
        '0',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '0',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
    ],
    [
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
    ],
    [
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
    ],
    [
        '1',
        '1',
        '1',
        '1',
        '1',
        '0',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '0',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
    ],
    [
        '1',
        '0',
        '1',
        '1',
        '1',
        '1',
        '1',
        '0',
        '1',
        '1',
        '1',
        '0',
        '1',
        '1',
        '1',
        '1',
        '0',
        '1',
        '1',
        '1',
    ],
    [
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '0',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '0',
    ],
    [
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '0',
        '1',
        '1',
        '1',
        '1',
        '0',
        '0',
    ],
    [
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
    ],
    [
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
    ],
    [
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
        '1',
    ],
];

console.log(numIslands(grid));
console.log(numIslands(grid2));
console.log(numIslands(grid3));
